import streamlit as st
from streamlit_drawable_canvas import st_canvas
from tensorflow.keras.models import load_model
import numpy as np
from PIL import Image, ImageOps

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
model = load_model("handwritting_model.keras")

st.set_page_config(page_title="MNIST Digit Recognizer",
                   page_icon= "‚úçÔ∏è",
                   layout="centered")
st.title("‚úçÔ∏è Handwriting Digit Recognizer")
st.markdown("‡∏ß‡∏≤‡∏î‡πÄ‡∏•‡∏Ç 0-9 ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ AI ‡∏ó‡∏≤‡∏¢‡∏î‡∏π‡∏™‡∏¥‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πà‡∏°‡∏±‡πâ‡∏¢ ü§ñ")

# ‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏™
CANVAS_SIZE = 400  # ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß resize ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á

# ‡∏ß‡∏≤‡∏î‡πÄ‡∏•‡∏Ç
canvas_result = st_canvas(
    fill_color="white",
    stroke_width=15,
    stroke_color="white",
    background_color="black",
    width=CANVAS_SIZE,
    height=CANVAS_SIZE,
    drawing_mode="freedraw",
    key="canvas"
)

# ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡∏≤‡∏î
if canvas_result.image_data is not None:
    img = canvas_result.image_data.astype(np.uint8)
    img_pil = Image.fromarray(img)

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô MNIST: ‡∏Ç‡∏≤‡∏ß‡∏î‡∏≥, 28x28, 1 channel
    img_pil = ImageOps.grayscale(img_pil)
    img_pil = img_pil.resize((28, 28))
    img_array = np.array(img_pil).reshape(1, 28, 28, 1)
    img_array = img_array.astype("float32") / 255.0

    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    prediction = model.predict(img_array)
    predicted_label = np.argmax(prediction)

    st.subheader(f"AI ‡∏ó‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç: {predicted_label}")
    st.bar_chart(prediction[0])
